import React from 'react';

export default React.createContext({
    image: '',
    setImage: () => { },
    imagePath: '',
    setImagePath: () => { },
    followThisLink: '',
    setFollowThisLink: () => { },
    showModalConfirm: '',
    setShowModalConfirm: () => { },
    showModalSimpleMessage: '',
    setShowModalSimpleMessage: () => { },
    showModalCroppeImage: '',
    setShowModalCroppeImage: () => { },
    showModalInput: '',
    setShowModalInput: () => { },
    messageModal: '',
    setMessageModal: () => { },
    sender: '',
    setSender: () => { },
    inputTextModify: '',
    setInputTextModify: () => { },
    textButtonConfirm: '',
    setTextButtonConfirm: () => { },
    imageModal: '',
    setImageModal: () => { },
    selectedColor: '', 
    setSelectedColor: () => { },
    listCollections: '',  
    setListCollections: () => { },
    listCategories: '', 
    setListCategories: () => { },
    is_Edit: '', 
    setIs_Edit: () => { },
    categoriesChecked: '',
    setCategoriesChecked: () => { },
    searchValue: '',
    setSearchValue: () => { },
    isDirty: '',
    setIsDirty: () => { },
    tmp_parameter: '',
    setTmp_parameter: () => { },
    deleteThisCategory: '', 
    setDeleteThisCategory: () => { },
    handleModalConfirm: () => { },
    handleModalCancel: () => { },
    nameCollection: '',
    setNameCollection: () => { },
    descriptionCollection: '',
    setDescriptionCollection: () => { },
    metaTitle: '',
    setMetaTitle: () => { },
    metaDescription: '',
    setMetaDescription: () => { },
    metaUrl: '',
    setMetaUrl: () => { },
    imageName: '',
    setImageName: () => { },
    alt: '',
    setAlt: () => { },
    categoryName: '',
    setCategoryName: () => { },
    categoryId: '',
    setCategoryId: () => { },
    tmp_parameter: '',
    setTmp_parameter: () => { },
    dateField: '',
    setDateField: () => { },
    normalizUrl: () => { },
    handleModalCancel: () => { },
    deleteThisCategory: '',
    setDeleteThisCategory: () => { },
    dateField: '',
    setDateField: () => { },
    tinyLangauage: '',
    setTinyLanguage: () => { },
    initCollectionForm: () => { },
    cleanTemporayStorage: () => { },
    is: '',
    setIs: () => { },
});
